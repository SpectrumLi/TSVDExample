<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  
  <!--
  
  Note: For security reasons no actual connection strings are stored in this file. Instead you have two options:
  Option 1: Create a user environment variable named 'MySqlConnectionString' with the value being a valid connection
            string to a MySQL server instance. Note that our continuous integration server injects this environment variable.
  Option 2: Add a connection string in this file with the name 'MySqlConnectionString'. Note that for development this
            is not recommended as it becomes easy to accidentally check in your connection string. An example
            connection string is below:
  
  <?xml version="1.0" encoding="utf-8" ?>
  <connectionStrings>
    <add name="MySqlConnectionString" connectionString="Server=****;Database=****;Uid=****;Pwd=****;" providerName="MySql.Data.MySqlClient" />
  </connectionStrings>
  
  -->

  <system.data>
    <DbProviderFactories >
      <remove invariant="MySql.Data.MySqlClient" />
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.9.5.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    </DbProviderFactories>
  </system.data>
  
  <connectionStrings>
  </connectionStrings>
  
</configuration>